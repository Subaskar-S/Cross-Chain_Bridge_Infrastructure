name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-rust:
    name: Test Rust Components
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Run tests
      run: cargo test --all-features

  test-ethereum:
    name: Test Ethereum Contracts
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    
    - name: Install dependencies
      run: cd contracts/ethereum && forge install
    
    - name: Check contract formatting
      run: cd contracts/ethereum && forge fmt --check
    
    - name: Build contracts
      run: cd contracts/ethereum && forge build
    
    - name: Run contract tests
      run: cd contracts/ethereum && forge test -vvv

  test-substrate:
    name: Test Substrate Components
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    
    - name: Install cargo-contract
      run: cargo install cargo-contract --force
    
    - name: Build Substrate contracts
      run: cd contracts/substrate && cargo contract build
    
    - name: Test Substrate contracts
      run: cd contracts/substrate && cargo test

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test-rust, test-ethereum, test-substrate]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: bridge_pass
          POSTGRES_USER: bridge_user
          POSTGRES_DB: bridge
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    
    - name: Start local blockchain networks
      run: |
        anvil --port 8545 --accounts 10 --balance 10000 &
        echo "Started Anvil"
    
    - name: Run integration tests
      run: cd tests && cargo test --features integration
      env:
        DATABASE_URL: postgresql://bridge_user:bridge_pass@localhost:5432/bridge
        REDIS_URL: redis://localhost:6379

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run security audit
      run: cargo audit
    
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    
    - name: Run Slither analysis
      uses: crytic/slither-action@v0.3.0
      with:
        target: contracts/ethereum/
        slither-args: --filter-paths "lib/"
