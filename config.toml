# Cross-Chain Bridge Configuration

[bridge]
name = "Ethereum-Polkadot Bridge"
version = "0.1.0"
environment = "development"

[ethereum]
# RPC endpoint for Ethereum node
rpc_url = "http://localhost:8545"
# WebSocket endpoint for event monitoring
ws_url = "ws://localhost:8545"
# Chain ID (1 for mainnet, 1337 for local)
chain_id = 1337
# Bridge contract address (deployed during setup)
bridge_contract = "0x0000000000000000000000000000000000000000"
# Block confirmation requirements
confirmations = 12
# Gas settings
gas_limit = 300000
gas_price = 20000000000  # 20 gwei

[polkadot]
# WebSocket endpoint for Substrate node
ws_url = "ws://localhost:9944"
# Bridge pallet name
pallet_name = "bridge"
# Block confirmation requirements
confirmations = 6

[threshold]
# Threshold signature scheme (schnorr or ecdsa)
scheme = "schnorr"
# Number of validators required for signature (k)
threshold = 2
# Total number of validators (n)
total_validators = 3
# Key generation parameters
key_size = 256

[validators]
# Validator configuration
[[validators.ethereum]]
address = "0x70997970C51812dc3A010C7d01b50e0d17dc79C8"
stake = 1000
active = true

[[validators.ethereum]]
address = "0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC"
stake = 1000
active = true

[[validators.ethereum]]
address = "0x90F79bf6EB2c4f870365E785982E1f101E93b906"
stake = 1000
active = true

[[validators.polkadot]]
account = "5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY"
stake = 1000
active = true

[[validators.polkadot]]
account = "5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty"
stake = 1000
active = true

[[validators.polkadot]]
account = "5FLSigC9HGRKVhB9FiEo4Y3koPsNmBmLJbpXg2mp1hXcS59Y"
stake = 1000
active = true

[relayer]
# Relayer service configuration
port = 8080
# Event polling interval (seconds)
poll_interval = 5
# Maximum retry attempts
max_retries = 3
# Batch size for processing events
batch_size = 10

[database]
# PostgreSQL connection
url = "postgresql://bridge_user:bridge_pass@localhost:5432/bridge"
# Connection pool settings
max_connections = 10
min_connections = 1

[redis]
# Redis connection for caching
url = "redis://localhost:6379"
# Key expiration time (seconds)
ttl = 3600

[api]
# API server configuration
host = "0.0.0.0"
port = 3001
# CORS settings
cors_origins = ["http://localhost:3000"]

[monitoring]
# Prometheus metrics endpoint
metrics_port = 9001
# Log level (trace, debug, info, warn, error)
log_level = "info"
# Enable structured logging
structured_logs = true

[security]
# Emergency pause settings
emergency_pause = false
# Admin addresses for emergency functions
admin_addresses = [
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY"
]
# Slashing parameters
slashing_rate = 0.1  # 10% of stake
min_stake = 100
